trigger:
- master

variables:
  containerimagetag: '$(Build.SourceVersion)'
  containerregistry: 'nttcshowcase.azurecr.io'
  containerimagerepository: 'technologyconsulting-showcase-orderdomain'
  containerregistrysericeconnection: 'acr-sc'

pool:
  vmImage: 'ubuntu-latest'

stages:

  - stage: build
    displayName: Build App
    jobs:
      - job: dockerbuild
        displayName: Docker Build and Push
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: $(containerregistrysericeconnection)
              repository: $(containerimagerepository)
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(containerimagetag)'

#      - job: scanImage
#        displayName: Scan built image with Trivy
#        dependsOn: dockerbuild
#        steps:
#          - task: CmdLine@2
#            displayName: run Trivy scan in pipeline
#            inputs:
#              script: |
#                docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --ignore-unfixed --severity MEDIUM,HIGH $(containerregistry)/$(containerimagerepository):$(containerimagetag)
#                docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 1 --ignore-unfixed --severity CRITICAL $(containerregistry)/$(containerimagerepository):$(containerimagetag)

  - stage: deploy
    displayName: Deploy app
    jobs:
      - job: getSecrets
        displayName: get Secrets and deploy
        steps:
          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
              KeyVaultName: 'vault-tc-showcase-prod'
              SecretsFilter: 'containerregistry-pullsecret'
              RunAsPreJob: true

          - task: AzureKeyVault@1
            inputs:
              azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
              KeyVaultName: 'vault-tc-showcase-prod'
              SecretsFilter: '*'
              RunAsPreJob: true

          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
              azureResourceGroup: 'tc-showcase-prod'
              kubernetesCluster: 'k8s-tc-showcase-prod'
              namespace: 'orderdomain'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: './resources/k8s/'
              releaseName: 'orderdomain'
              valueFile: './resources/k8s/values.yaml'
              overrideValues: 'app.image.tag=$(containerimagetag),app.image.repository=$(containerregistry)/$(containerimagerepository),app.azureconfig.resourcegroup="tc-showcase-prod",app.azureconfig.loadbalancerip=$(orderdomain-publicip),app.appconfig.MANUFACTURE_USER=$(orderdomain-auth-manufacture-user),app.appconfig.MANUFACTURE_PASSWORD=$(orderdomain-auth-manufacture-password),app.appconfig.MANUFACTURE_WORKORDER_URL=$(orderdomain-auth-manufacture-workorder-url),app.dbconfig.host=changeme,app.dbconfig.user=changeme,app.dbconfig.password=changeme,app.dbconfig.schema=changeme'
              resetValues: true
              force: false
              arguments: "--debug"
